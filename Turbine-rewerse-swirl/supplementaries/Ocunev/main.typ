#import "./template.typ": *
#import "@preview/fletcher:0.5.8" as fletcher: diagram, node, edge
#import fletcher.shapes: pill, parallelogram, diamond, hexagon, brace
#show: conf.with()

#outline(title: "СОДЕРЖАНИЕ")

#set math.equation(numbering: none)

#heading(numbering:none)[Введение]

Цель предложения состоит в совершенствовании расчета турбины по среднему диаметру (по ступеням) по методике Кирилла Леонидовича Лапшина @lap и расчета обратной закрутки потока по методике, предложенной группе 3231303/21201 п/г 2, путём поиска оптимальных значений коэффициентов скорости $Phi$ и $Psi$, а также коэффициентов $rho_k$ и $F$.

Для проведения расчетов используется экосистема языка Julia, для построения графиков используется Makie.jl @makie.

= Описание оригинальной методики и её недостатков

#v(-1em)

#figure(
  diagram(
    node-stroke: black,

    node((0,1.3), name: <P1>, corner-radius: 10pt, [
      Исходные данные $[C] $ 
    ]),
    edge("=="),

    node((0,2), shape: parallelogram.with(angle: 30deg), name: <P2>, [
      $"задаем "[p_2], [phi], [psi] $
    ]),
    edge("=="),
  
    node((0,3), name: <P3>, [
      *Первичный расчет* \
      #diagram(
      $ (G_"опт", [C]) edge(->, text(#0.8em, f_"пер")) & [I] $
      )
    ] ),
    edge("=="),
    
    node((0,4), name: <P4>, [
      *Расчет по ступеням* \
      #diagram(
      $ (G_"опт", [C], [I], [p_2], [phi], [psi]) edge(->, text(#0.8em, f_"ступ")) & [S] $
      )
    ]),
    edge("=="),

    node((0,5), name: <P5>, shape: diamond, 
      fill: gradient.linear(green,red), 
      inset: 4pt, [
        $ ? cases(G_"опт" approx G_"A2GTP" \ Sigma N approx [C].N) $
    ]),
    edge("=="),

    node((0,6), shape: parallelogram.with(angle: 30deg), name: <P6>, [
      $"задаем " F, " " rho_k, " " alpha_1 "и " beta_2^* $
    ]),
    edge("=="),

    node((0,7), name: <P7>, [
      *Расчет обратной закрутки* \
      #diagram(
      $ (G_"опт", [C], [I], [S], F, rho_k, alpha_1, beta_2^*) edge(->, text(#0.8em, f_"зак")) & [R] $
      )
    ]),
    edge("=="),

    node((0,8), name: <P8>, shape: diamond, 
      fill: gradient.linear(green,red), 
      inset: 6pt, [
        $ ? [R].p_2 arrow.tr arrow.tr $
    ]),
    edge("=="),

    node((0,8.9), name: <P9>, corner-radius: 10pt, [
      Профилирование РК и СА\
      Проверка конфузорности РК и СА
    ]),

    edge(<P8>,(1,8),(1,6),<P6>,"-|>"),
    edge(<P5>,(1,5),(1,2),<P2>,"-|>"),

    node((-1,1.3), [1], name: <n1>),
    node((-1,2), [2], name: <n2>),
    node((-1,3), [3], name: <n3>),
    node((-1,4), [4], name: <n4>),
    node((-1,5), [5], name: <n5>),
    node((-1,6), [6], name: <n6>),
    node((-1,7), [7], name: <n7>),
    node((-1,8), [8], name: <n8>),
    node((-1,8.9), [9], name: <n9>),
    edge(<n1>,<P1>, "--"),
    edge(<n2>,<P2>, "--"),
    edge(<n3>,<P3>, "--"),
    edge(<n4>,<P4>, "--"),
    edge(<n5>,<P5>, "--"),
    edge(<n6>,<P6>, "--"),
    edge(<n7>,<P7>, "--"),
    edge(<n8>,<P8>, "--"),
    edge(<n9>,<P9>, "--"),

  ),
  caption: [Блок-схема оригинальной методики]
) <orig>

На @orig[рисунке] изображена блок-схема оригинальной методики вычислений, использующей методическое пособие Кирилла Леонидовича Лапшина для проведения первичного расчета и расчета по ступеням, _а также специальный для расчета закрутки потока в последней ступени турбины по обратному закону, выданный группе 3231303/21201 п/г 2_.

*Пояснение*:
+ Начальные данные $[C]$, полученные из задания и расчета турбоагрегата — данных, полученных с предыдущего семестра;
+ Задаём давление на выходе из каждой ступени турбины $[p_2]$ и характерные коэффициенты $[phi]$ и $[psi]$. Задавать их следует *_случайно_* в рамках некоторого диапазона;
+ Проводится первичный расчет, целью которого является получение параметров на выходе из турбины;
+ Проводится расчет по ступеням;
+ Проверяется совпадение расхода с расходом из исходных данных, проверяется совпадение сумм мощностей с мощностью из исходных данных. Если совпадения нет, возвращаемся к шагу 2;
+ В некотором промежутке *_случайно_* выбираются $F$, $rho_k$ и лопаточные углы последней ступени $alpha_1$ и $beta_2^*$;
+ Выполняется расчет закрутки потока на последней ступени по обратному закону. Результатом этого этапа являются данные $[R]$, необходимые для построения профилей лопаток;
+ Проверяется монотонный рост давлений $[p_2]$ на выходе из последней ступени по радиусу. Если монотонного роста нет, возвращаемся к шагу 7;
+ Построение профилей лопаток, проверка их на конфузорность. Это заключительный этап, после него следует моделирование и расчет на прочность.

Как видно, в методике есть два шага --- 2 и 6, в которых параметры берутся необоснованно, имеет смысл провести анализ влияния этих параметров на характеристики установки для обоснованного выбора их оптимальных значений. Предложение по этому анализу описано далее.

= Описание усовершенствованной методики

#v(-1em)

#figure(
  text(size:12pt,diagram(
    node-stroke: black,

    node((0,1), corner-radius: 10pt, [
      Исходные данные $ [C]$ 
    ]),
    edge("=="),

    node((0,2), shape: parallelogram.with(angle: 30deg), name: <P2>, [
      $"задаем "[p_2], [phi], [psi] $
    ]),
    edge("=="),
  
    node((0,3), name:<I>, [
      *Первичный расчет* \
      #diagram(
      $ (G_"опт", [C]) edge(->, text(#0.8em, f_"пер")) & [I] $
      )
    ] ),
    edge(<P2>,<I>,"=="),
    edge("=="),

    node((0,4), name: <S>, [
      *Расчет по ступеням* \
      #diagram(
      $ (G_"опт", [C], [I], [p_2], [phi], [psi]) edge(->, text(#0.8em, f_"ступ")) & [S] $
      )
    ]),
    edge("=="),

    node((0,5), shape: parallelogram.with(angle: 30deg), name: <F>, [
      $"задаем " alpha_1 "и " beta_2^* $
    ]),
    edge("=="),

    node((0,6), name: <RR>, [
      *Расчет обратной закрутки* \
      #diagram(
      $ (G_"опт", [C], [I], [S], F, rho_k, alpha_1, beta_2^*) edge(->, text(#0.8em, f_"зак")) & [R] $
      )
    ]),
    edge("=="),

    node((0,7), corner-radius: 10pt, [
      Профилирование РК и СА \
      Проверка конфузорности РК и СА \
    ]),

    node((1,5), name: <FF>, [
      Для $F_i in [-0.5,0] $ и $rho_(k i) in [0.2, 0.5] $:

      Расчет обратной закрутки

      #diagram(
      $ (G_"опт", [I], [S], [C], F_i, rho_(k i)) edge(->, text(#0.8em, f_"зак")) & [R]_i $
      )
    ]),
    edge(),
    node((1,6), [
      $ [ [R]_i ] <- [R]_i: [R]_i.p_2 arrow.tr arrow.tr $
    ]),
    edge(),
    node((1,6.8), shape: hexagon,
    fill: gradient.linear(green,red),
    name: <CC>, [
      Выбираем "хорошие" $f$ и $rho_k$ \ 
      $ [ [R]_i ] <- [R]_i^5 : |alpha_2| >= 86 degree$, $|Delta rho_k| <= 0.1$

      Из этой области $[ [R]_i ]$ выбирается \ [R] с наименьшим градиентом
    ]),
    node((1.7,5.65),[меняем $alpha_1$, $beta_2^*$], shape: parallelogram.with(angle: 30deg), name:<Lub>),
    edge(<CC.west>, (0.5,6.8),(0.5,6),<RR>, "-|>", $F, rho_k$, label-pos: 0.6),
    edge(<F>,<FF>, "-|>"),
    edge(<CC>,(1.8,6.8),(1.8,6.5),(1.7,6.5),<Lub>, "-|>"),
    edge(<Lub>,(1.7,5),<FF>, "-|>"),

    node(enclose:((0.5,0),(2,4.3)), stroke:(dash: "dashed", paint: rgb("#D65D0E"))),
    node(enclose:((0.5,4.6),(2,7.6)), stroke:(dash: "dashed", paint: rgb("#458588"))),
    node(enclose:((0.5,4.6),(3,7.6)), stroke: 0pt),
    

    node((1,1), name: <Gi>, [
      Для $G_i in [120 ... 180] $: \
      Первичный расчет \
      #diagram(
      $ (G_i, [C]) edge(->, text(#0.8em, f_"пер")) & [I]_i $
      )
    ] ),
    edge(),
    node((1,2), [
      Для $G_i in [120 ... 180] $: \
      Расчет по ступеням \
      #diagram($ (G_i, [C], [I]_i, [p_2],[phi],[psi]) edge(->, text(#0.8em, f_"ступ")) & [S]_i $
      )
    ]),
    edge(),
    node((1,3), [
      $ G_"опт" <- G_i: [S]_i^4.alpha_2 = 90 degree $
    ]),
    edge(),
    node((1,4), name: <rr>, shape: diamond, 
    fill: gradient.linear(green,red), 
    inset: 4pt, [
      $ ? cases(G_"опт" approx G_"A2GTP" \ Sigma N approx [C].N) $
    ]),
    edge(<P2>,(0.5,2),(0.5,1),<Gi>, "-|>"),
    edge(<rr.west>, (0.5,4), (0.5,3) , <I.east>, "-|>", [$ G_"опт", phi_"опт",psi_"опт" $]),
    edge(<rr>, (1.7,4),<Shu>, "-|>"),
    node((1.7,1), shape: parallelogram.with(angle: 30deg), name: <Shu>, [
      меняем $[phi],[psi]$
    ]),
    edge(<Shu>,<Gi>, "-|>"),
  )),
  caption: [Блок-схема дополненного алгоритма вычислений]
) <second>

На @second[рисунке] изображена блок-схема усовершенствованной методики. Она привносит изменения, необходимые для анализа и выбора оптимальных параметров первичного расчета $Phi$ и $Psi$ (красный блок), а также параметров $F$ и $rho_k$ для обратной закрутки (синий блок).

== Поиск оптимальных параметров расчета по ступеням

Для каждых $phi,psi$ существует лишь один расход $G_"опт"$, обеспечивающий осевой выход, что показано на @Pik[графике], полученном в результате варьирования расхода в некотором промежутке. Этот расход должен совпасть с расходом $G_"A2GTP"$, полученном от расчета турбоагрегата, для этого надо варьировать параметры $phi, psi$. На вышеупомянутом графике это должно выглядеть как совпадение красной и голубой пунктирной линий.

#figure(
  image("assets/Gplot.svg", width:70%),
  caption: [График зависимости $alpha_2$ от $G$ при заданных $phi, psi$]
) <Pik>

Таким образом строится зависимость $G_"опт" (Phi, Psi)$, график которой изображен на @G[рисунке]. Красной линией на нем изображена линия оптимальных расходов, совпадающих с расходом, полученным из A2GTP, красной точкой показаны параметры, при которых происходит наилучшее совпадение расчетной мощности с номинальной.

#figure(
  image("assets/G.svg", width: 90%),
  caption: [Зависимость оптимального расхода воздуха через компрессор от параметров $Phi$ и $Psi$. Красной линией обозначен целевой расход, красной точкой обозначено оптимальное значение параметров ]
) <G>

== Поиск "хороших" параметров для закрутки потока

Эти значения названы "хорошими", а не оптимальными, потому что сформулировать критерии оптимальности в этом расчете невозможно. "Хорошим" считается случай, когда зависимость давлений на выходе $p_2$ от радиуса на последней ступени турбины максимально близка к линейной --- тогда обеспечивается устойчивость работы установки при различных режимах.

Вручную выбираются углы $alpha_1$ и $beta_2^*$, с ними для всех возможных значений $F$ и $rho_k$ производится расчет закрутки потока. По результатам расчета строится скалярное поле рассматриваемых элементов расчета в координатах $F$ и $rho_k$, вырезаются значения, не обеспечивающие монотонное повышение давления по радиусу.

На @Pih[рисунке] представлено такое поле, построенное для среднеквадратичного отклонения (SSE) профиля роста давления по радиусу от их усреднённого линейного тренда и разницы суммарной полиномиальной и кинематической степени реактивности.

Чем "более фиолетовая" точка на левом графике, тем лучше. Чем "более бирюзовая" на правом - тем лучше. Все из них подходят, чтобы выбрать одну и обеспечить сохранение декларативности, выбирается точка с наименьшим градиентом, потому что в случае ошибки моделирования или изготовления влияние этой ошибки на анализируемый параметр будет также минимизировано.

#v(-2em)

#figure(
  image("assets/var.svg", width:100%),
  caption: [Зависимости SSE и $Delta rho_k$ от $F$ и $rho_k$ при заданных $alpha_1$ и $beta_2^*$]
) <Pih>

В случае неудачного выбора углов $alpha_1$ и $beta_2^*$ поле распределения параметров может выглядеть как на @fig-2025-06-08-02-53-53[рисунке]. Здесь "хороших" точек нет, помимо того, что график имеет нефизический вид.

#v(-2em)

#figure(
  image("assets/2025-06-08-02-53-53.png", width: 100%),
  caption: [Зависимости $alpha_2$ и $Delta rho_k$ от $F$ и $rho_k$ при неудачных $alpha_1$ и $beta_2^*$],
) <fig-2025-06-08-02-53-53>

#v(-20em)

#heading(numbering: none)[Заключение]

Предложена и реализована методика по поиску оптимальных параметров предварительного расчета $Phi$ и $Psi$ и параметров расчета обратной закрутки $F$ и $rho_k$. Построены наглядные графики полей распределения величин, по которым определяется качество этих параметров, наглядно показана их оптимальность.

#bibliography(
  "ref.bib",
  style: "gost-r-705-2008-numeric",
  title: "Литература",
)
